body {
    font-family: sans-serif;
    margin: 0;
    padding: 10px;
    background-color: var(--tg-theme-bg-color, #ffffff);
    color: var(--tg-theme-text-color, #000000);
    overscroll-behavior: none;
    display: flex;
    flex-direction: column;
    height: 100vh;
    box-sizing: border-box;
    overflow: hidden; /* Prevent body scroll */
}

#loader { text-align: center; padding: 50px; font-size: 1.2em; }

#app-container {
    display: flex;
    flex-grow: 1;
    gap: 15px;
    height: calc(100% - 20px); /* Full height minus body padding */
    overflow: hidden; /* Prevent container scroll */
}

/* Drawing Area */
#drawing-area {
    flex-basis: 75%;
    border: 1px solid var(--tg-theme-hint-color, #cccccc);
    border-radius: 5px;
    background-color: var(--tg-theme-secondary-bg-color, #f0f0f0);
    display: flex; /* Use flexbox to manage children */
    flex-direction: column; /* Stack title and wrapper */
    overflow: hidden; /* CRUCIAL: Prevent drawing area itself from scrolling */
    position: relative; /* Needed for absolute positioning of custom cursor */
}
#drawing-area p {
    text-align: center;
    margin: 5px 0;
    flex-shrink: 0; /* Prevent title from shrinking */
}

/* Wrapper for Panzoom - takes up available space */
#panzoom-wrapper {
    flex-grow: 1; /* Allow wrapper to fill space */
    overflow: hidden; /* Panzoom needs this */
    display: flex; /* Center the content */
    align-items: center;
    justify-content: center;
    cursor: grab; /* Indicate panning possible */
    touch-action: none; /* Prevent browser default touch actions */
}
#panzoom-wrapper.is-drawing {
    cursor: none; /* Hide grab cursor when drawing */
}


/* Container holds image and canvas at original size */
#image-canvas-container {
    position: relative; /* For canvas overlay */
    width: fit-content;
    height: fit-content;
    /* Panzoom will handle transform */
}

#reference-image {
    display: block;
    position: relative;
    z-index: 1;
    /* No max-width/height here - let it be its natural size */
}

#mask-canvas {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    cursor: none; /* Hide default cursor specifically on canvas */
    touch-action: none;
    width: 100%; /* Match parent */
    height: 100%; /* Match parent */
    display: block;
}

/* Custom Cursor - positioned relative to drawing-area */
#custom-cursor {
    position: absolute;
    border: 1px solid black;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 50%;
    pointer-events: none;
    transform: translate(-50%, -50%);
    display: none;
    z-index: 10; /* Above everything */
}

/* Controls Panel */
#controls-panel {
    flex-basis: 25%;
    min-width: 180px;
    border: 1px solid var(--tg-theme-hint-color, #cccccc);
    padding: 10px;
    border-radius: 5px;
    background-color: var(--tg-theme-secondary-bg-color, #f0f0f0);
    display: flex;
    flex-direction: column;
    overflow-y: auto; /* Allow controls to scroll */
}

#controls-panel h3 { margin-top: 0; text-align: center; }
.slider-container { display: flex; align-items: center; gap: 10px; margin-bottom: 15px; }
#brush-size-slider { flex-grow: 1; }
#brush-size-value { min-width: 40px; text-align: right; }
#undo-info { font-size: 0.8em; color: var(--tg-theme-hint-color, #666666); text-align: center; margin-bottom: 20px; }
#confirm-button { width: 100%; padding: 12px; font-size: 1em; font-weight: bold; background-color: var(--tg-theme-button-color, #3390ec); color: var(--tg-theme-button-text-color, #ffffff); border: none; border-radius: 5px; cursor: pointer; margin-top: auto; }
#confirm-button:hover { opacity: 0.9; }
.error { color: var(--tg-theme-destructive-text-color, red); margin-top: 10px; font-size: 0.9em; text-align: center; }

/* Media query */
@media (max-width: 768px) {
    #app-container { flex-direction: column; height: auto; overflow: visible; }
    #drawing-area {
        flex-basis: 60vh; /* Give drawing area significant height */
        min-height: 300px;
    }
     #controls-panel {
        flex-basis: auto; /* Let controls take needed height */
        height: auto;
        min-width: unset;
     }
    #confirm-button { margin-top: 20px; }
}